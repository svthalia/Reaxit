// Mocks generated by Mockito 5.3.2 from annotations
// in reaxit/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_bloc/flutter_bloc.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:reaxit/api/api_repository.dart' as _i4;
import 'package:reaxit/blocs.dart' as _i2;
import 'package:reaxit/models.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthState_0 extends _i1.SmartFake implements _i2.AuthState {
  _FakeAuthState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_1 extends _i1.SmartFake implements _i3.Event {
  _FakeEvent_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeListResponse_2<T> extends _i1.SmartFake
    implements _i3.ListResponse<T> {
  _FakeListResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventRegistration_3 extends _i1.SmartFake
    implements _i3.EventRegistration {
  _FakeEventRegistration_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdminEvent_4 extends _i1.SmartFake implements _i3.AdminEvent {
  _FakeAdminEvent_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdminEventRegistration_5 extends _i1.SmartFake
    implements _i3.AdminEventRegistration {
  _FakeAdminEventRegistration_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePayable_6 extends _i1.SmartFake implements _i3.Payable {
  _FakePayable_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFoodEvent_7 extends _i1.SmartFake implements _i3.FoodEvent {
  _FakeFoodEvent_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFoodOrder_8 extends _i1.SmartFake implements _i3.FoodOrder {
  _FakeFoodOrder_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentUser_9 extends _i1.SmartFake implements _i3.PaymentUser {
  _FakePaymentUser_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMember_10 extends _i1.SmartFake implements _i3.Member {
  _FakeMember_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFullMember_11 extends _i1.SmartFake implements _i3.FullMember {
  _FakeFullMember_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlbum_12 extends _i1.SmartFake implements _i3.Album {
  _FakeAlbum_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDevice_13 extends _i1.SmartFake implements _i3.Device {
  _FakeDevice_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSalesOrder_14 extends _i1.SmartFake implements _i3.SalesOrder {
  _FakeSalesOrder_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiRepository_15 extends _i1.SmartFake implements _i4.ApiRepository {
  _FakeApiRepository_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailState_16<E> extends _i1.SmartFake
    implements _i2.DetailState<E> {
  _FakeDetailState_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthCubit extends _i1.Mock implements _i2.AuthCubit {
  MockAuthCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAuthState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.AuthState);
  @override
  _i5.Stream<_i2.AuthState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i2.AuthState>.empty(),
      ) as _i5.Stream<_i2.AuthState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> logIn() => (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void emit(_i2.AuthState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i6.Change<_i2.AuthState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ApiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepository extends _i1.Mock implements _i4.ApiRepository {
  MockApiRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.Event> getEvent({required int? pk}) => (super.noSuchMethod(
        Invocation.method(
          #getEvent,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.Event>.value(_FakeEvent_1(
          this,
          Invocation.method(
            #getEvent,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.Event>);
  @override
  _i5.Future<_i3.ListResponse<_i3.Event>> getEvents({
    String? search,
    int? limit,
    int? offset,
    String? ordering,
    DateTime? start,
    DateTime? end,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
          {
            #search: search,
            #limit: limit,
            #offset: offset,
            #ordering: ordering,
            #start: start,
            #end: end,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.Event>>.value(
            _FakeListResponse_2<_i3.Event>(
          this,
          Invocation.method(
            #getEvents,
            [],
            {
              #search: search,
              #limit: limit,
              #offset: offset,
              #ordering: ordering,
              #start: start,
              #end: end,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.Event>>);
  @override
  _i5.Future<_i3.ListResponse<_i3.PartnerEvent>> getPartnerEvents({
    String? search,
    int? limit,
    int? offset,
    String? ordering,
    DateTime? start,
    DateTime? end,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartnerEvents,
          [],
          {
            #search: search,
            #limit: limit,
            #offset: offset,
            #ordering: ordering,
            #start: start,
            #end: end,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.PartnerEvent>>.value(
            _FakeListResponse_2<_i3.PartnerEvent>(
          this,
          Invocation.method(
            #getPartnerEvents,
            [],
            {
              #search: search,
              #limit: limit,
              #offset: offset,
              #ordering: ordering,
              #start: start,
              #end: end,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.PartnerEvent>>);
  @override
  _i5.Future<_i3.ListResponse<_i3.EventRegistration>> getEventRegistrations({
    required int? pk,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventRegistrations,
          [],
          {
            #pk: pk,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.EventRegistration>>.value(
            _FakeListResponse_2<_i3.EventRegistration>(
          this,
          Invocation.method(
            #getEventRegistrations,
            [],
            {
              #pk: pk,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.EventRegistration>>);
  @override
  _i5.Future<_i3.EventRegistration> registerForEvent(int? pk) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForEvent,
          [pk],
        ),
        returnValue:
            _i5.Future<_i3.EventRegistration>.value(_FakeEventRegistration_3(
          this,
          Invocation.method(
            #registerForEvent,
            [pk],
          ),
        )),
      ) as _i5.Future<_i3.EventRegistration>);
  @override
  _i5.Future<void> cancelRegistration({
    required int? eventPk,
    required int? registrationPk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelRegistration,
          [],
          {
            #eventPk: eventPk,
            #registrationPk: registrationPk,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<Map<String, _i3.RegistrationField>> getRegistrationFields({
    required int? eventPk,
    required int? registrationPk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationFields,
          [],
          {
            #eventPk: eventPk,
            #registrationPk: registrationPk,
          },
        ),
        returnValue: _i5.Future<Map<String, _i3.RegistrationField>>.value(
            <String, _i3.RegistrationField>{}),
      ) as _i5.Future<Map<String, _i3.RegistrationField>>);
  @override
  _i5.Future<void> updateRegistrationFields({
    required int? eventPk,
    required int? registrationPk,
    required Map<String, _i3.RegistrationField>? fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRegistrationFields,
          [],
          {
            #eventPk: eventPk,
            #registrationPk: registrationPk,
            #fields: fields,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.AdminEvent> getAdminEvent({required int? pk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdminEvent,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.AdminEvent>.value(_FakeAdminEvent_4(
          this,
          Invocation.method(
            #getAdminEvent,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.AdminEvent>);
  @override
  _i5.Future<_i3.ListResponse<_i3.AdminEventRegistration>>
      getAdminEventRegistrations({
    required int? pk,
    int? limit,
    int? offset,
    String? search,
    String? ordering,
    bool? cancelled,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAdminEventRegistrations,
              [],
              {
                #pk: pk,
                #limit: limit,
                #offset: offset,
                #search: search,
                #ordering: ordering,
                #cancelled: cancelled,
              },
            ),
            returnValue:
                _i5.Future<_i3.ListResponse<_i3.AdminEventRegistration>>.value(
                    _FakeListResponse_2<_i3.AdminEventRegistration>(
              this,
              Invocation.method(
                #getAdminEventRegistrations,
                [],
                {
                  #pk: pk,
                  #limit: limit,
                  #offset: offset,
                  #search: search,
                  #ordering: ordering,
                  #cancelled: cancelled,
                },
              ),
            )),
          ) as _i5.Future<_i3.ListResponse<_i3.AdminEventRegistration>>);
  @override
  _i5.Future<_i3.AdminEventRegistration> markPresentAdminEventRegistration({
    required int? eventPk,
    required int? registrationPk,
    required bool? present,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPresentAdminEventRegistration,
          [],
          {
            #eventPk: eventPk,
            #registrationPk: registrationPk,
            #present: present,
          },
        ),
        returnValue: _i5.Future<_i3.AdminEventRegistration>.value(
            _FakeAdminEventRegistration_5(
          this,
          Invocation.method(
            #markPresentAdminEventRegistration,
            [],
            {
              #eventPk: eventPk,
              #registrationPk: registrationPk,
              #present: present,
            },
          ),
        )),
      ) as _i5.Future<_i3.AdminEventRegistration>);
  @override
  _i5.Future<_i3.Payable> markPaidAdminEventRegistration({
    required int? registrationPk,
    required _i3.PaymentType? paymentType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPaidAdminEventRegistration,
          [],
          {
            #registrationPk: registrationPk,
            #paymentType: paymentType,
          },
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #markPaidAdminEventRegistration,
            [],
            {
              #registrationPk: registrationPk,
              #paymentType: paymentType,
            },
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<void> markNotPaidAdminEventRegistration(
          {required int? registrationPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotPaidAdminEventRegistration,
          [],
          {#registrationPk: registrationPk},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.ListResponse<_i3.AdminFoodOrder>> getAdminFoodOrders({
    required int? pk,
    int? limit,
    int? offset,
    String? search,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdminFoodOrders,
          [],
          {
            #pk: pk,
            #limit: limit,
            #offset: offset,
            #search: search,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.AdminFoodOrder>>.value(
            _FakeListResponse_2<_i3.AdminFoodOrder>(
          this,
          Invocation.method(
            #getAdminFoodOrders,
            [],
            {
              #pk: pk,
              #limit: limit,
              #offset: offset,
              #search: search,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.AdminFoodOrder>>);
  @override
  _i5.Future<_i3.Payable> markPaidAdminFoodOrder({
    required int? orderPk,
    required _i3.PaymentType? paymentType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPaidAdminFoodOrder,
          [],
          {
            #orderPk: orderPk,
            #paymentType: paymentType,
          },
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #markPaidAdminFoodOrder,
            [],
            {
              #orderPk: orderPk,
              #paymentType: paymentType,
            },
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<void> markNotPaidAdminFoodOrder({required int? orderPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markNotPaidAdminFoodOrder,
          [],
          {#orderPk: orderPk},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.FoodEvent> getFoodEvent(int? pk) => (super.noSuchMethod(
        Invocation.method(
          #getFoodEvent,
          [pk],
        ),
        returnValue: _i5.Future<_i3.FoodEvent>.value(_FakeFoodEvent_7(
          this,
          Invocation.method(
            #getFoodEvent,
            [pk],
          ),
        )),
      ) as _i5.Future<_i3.FoodEvent>);
  @override
  _i5.Future<_i3.ListResponse<_i3.FoodEvent>> getFoodEvents({
    int? limit,
    int? offset,
    String? ordering,
    DateTime? start,
    DateTime? end,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFoodEvents,
          [],
          {
            #limit: limit,
            #offset: offset,
            #ordering: ordering,
            #start: start,
            #end: end,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.FoodEvent>>.value(
            _FakeListResponse_2<_i3.FoodEvent>(
          this,
          Invocation.method(
            #getFoodEvents,
            [],
            {
              #limit: limit,
              #offset: offset,
              #ordering: ordering,
              #start: start,
              #end: end,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.FoodEvent>>);
  @override
  _i5.Future<_i3.FoodEvent> getCurrentFoodEvent() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentFoodEvent,
          [],
        ),
        returnValue: _i5.Future<_i3.FoodEvent>.value(_FakeFoodEvent_7(
          this,
          Invocation.method(
            #getCurrentFoodEvent,
            [],
          ),
        )),
      ) as _i5.Future<_i3.FoodEvent>);
  @override
  _i5.Future<_i3.FoodOrder> getFoodOrder(int? pk) => (super.noSuchMethod(
        Invocation.method(
          #getFoodOrder,
          [pk],
        ),
        returnValue: _i5.Future<_i3.FoodOrder>.value(_FakeFoodOrder_8(
          this,
          Invocation.method(
            #getFoodOrder,
            [pk],
          ),
        )),
      ) as _i5.Future<_i3.FoodOrder>);
  @override
  _i5.Future<void> cancelFoodOrder(int? pk) => (super.noSuchMethod(
        Invocation.method(
          #cancelFoodOrder,
          [pk],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.FoodOrder> placeFoodOrder({
    required int? eventPk,
    required int? productPk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeFoodOrder,
          [],
          {
            #eventPk: eventPk,
            #productPk: productPk,
          },
        ),
        returnValue: _i5.Future<_i3.FoodOrder>.value(_FakeFoodOrder_8(
          this,
          Invocation.method(
            #placeFoodOrder,
            [],
            {
              #eventPk: eventPk,
              #productPk: productPk,
            },
          ),
        )),
      ) as _i5.Future<_i3.FoodOrder>);
  @override
  _i5.Future<_i3.FoodOrder> changeFoodOrder({
    required int? eventPk,
    required int? productPk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeFoodOrder,
          [],
          {
            #eventPk: eventPk,
            #productPk: productPk,
          },
        ),
        returnValue: _i5.Future<_i3.FoodOrder>.value(_FakeFoodOrder_8(
          this,
          Invocation.method(
            #changeFoodOrder,
            [],
            {
              #eventPk: eventPk,
              #productPk: productPk,
            },
          ),
        )),
      ) as _i5.Future<_i3.FoodOrder>);
  @override
  _i5.Future<_i3.ListResponse<_i3.Product>> getFoodEventProducts(
    int? pk, {
    int? limit,
    int? offset,
    String? search,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFoodEventProducts,
          [pk],
          {
            #limit: limit,
            #offset: offset,
            #search: search,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.Product>>.value(
            _FakeListResponse_2<_i3.Product>(
          this,
          Invocation.method(
            #getFoodEventProducts,
            [pk],
            {
              #limit: limit,
              #offset: offset,
              #search: search,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.Product>>);
  @override
  _i5.Future<_i3.PaymentUser> getPaymentUser() => (super.noSuchMethod(
        Invocation.method(
          #getPaymentUser,
          [],
        ),
        returnValue: _i5.Future<_i3.PaymentUser>.value(_FakePaymentUser_9(
          this,
          Invocation.method(
            #getPaymentUser,
            [],
          ),
        )),
      ) as _i5.Future<_i3.PaymentUser>);
  @override
  _i5.Future<_i3.Payable> getFoodOrderPayable({required int? foodOrderPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFoodOrderPayable,
          [],
          {#foodOrderPk: foodOrderPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #getFoodOrderPayable,
            [],
            {#foodOrderPk: foodOrderPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Payable> thaliaPayFoodOrder({required int? foodOrderPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #thaliaPayFoodOrder,
          [],
          {#foodOrderPk: foodOrderPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #thaliaPayFoodOrder,
            [],
            {#foodOrderPk: foodOrderPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Payable> getEventRegistrationPayable(
          {required int? registrationPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventRegistrationPayable,
          [],
          {#registrationPk: registrationPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #getEventRegistrationPayable,
            [],
            {#registrationPk: registrationPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Payable> thaliaPayRegistration(
          {required int? registrationPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #thaliaPayRegistration,
          [],
          {#registrationPk: registrationPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #thaliaPayRegistration,
            [],
            {#registrationPk: registrationPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Payable> getSalesOrderPayable(
          {required String? salesOrderPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSalesOrderPayable,
          [],
          {#salesOrderPk: salesOrderPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #getSalesOrderPayable,
            [],
            {#salesOrderPk: salesOrderPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Payable> thaliaPaySalesOrder(
          {required String? salesOrderPk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #thaliaPaySalesOrder,
          [],
          {#salesOrderPk: salesOrderPk},
        ),
        returnValue: _i5.Future<_i3.Payable>.value(_FakePayable_6(
          this,
          Invocation.method(
            #thaliaPaySalesOrder,
            [],
            {#salesOrderPk: salesOrderPk},
          ),
        )),
      ) as _i5.Future<_i3.Payable>);
  @override
  _i5.Future<_i3.Member> getMember({required int? pk}) => (super.noSuchMethod(
        Invocation.method(
          #getMember,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.Member>.value(_FakeMember_10(
          this,
          Invocation.method(
            #getMember,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.Member>);
  @override
  _i5.Future<_i3.ListResponse<_i3.ListMember>> getMembers({
    String? search,
    int? limit,
    int? offset,
    String? ordering,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembers,
          [],
          {
            #search: search,
            #limit: limit,
            #offset: offset,
            #ordering: ordering,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.ListMember>>.value(
            _FakeListResponse_2<_i3.ListMember>(
          this,
          Invocation.method(
            #getMembers,
            [],
            {
              #search: search,
              #limit: limit,
              #offset: offset,
              #ordering: ordering,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.ListMember>>);
  @override
  _i5.Future<_i3.FullMember> getMe() => (super.noSuchMethod(
        Invocation.method(
          #getMe,
          [],
        ),
        returnValue: _i5.Future<_i3.FullMember>.value(_FakeFullMember_11(
          this,
          Invocation.method(
            #getMe,
            [],
          ),
        )),
      ) as _i5.Future<_i3.FullMember>);
  @override
  _i5.Future<void> updateAvatar(String? file) => (super.noSuchMethod(
        Invocation.method(
          #updateAvatar,
          [file],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updateDescription(String? description) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDescription,
          [description],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.Album> getAlbum({required String? slug}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAlbum,
          [],
          {#slug: slug},
        ),
        returnValue: _i5.Future<_i3.Album>.value(_FakeAlbum_12(
          this,
          Invocation.method(
            #getAlbum,
            [],
            {#slug: slug},
          ),
        )),
      ) as _i5.Future<_i3.Album>);
  @override
  _i5.Future<void> updateLiked(
    int? id,
    bool? liked,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLiked,
          [
            id,
            liked,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.ListResponse<_i3.ListAlbum>> getAlbums({
    String? search,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAlbums,
          [],
          {
            #search: search,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.ListAlbum>>.value(
            _FakeListResponse_2<_i3.ListAlbum>(
          this,
          Invocation.method(
            #getAlbums,
            [],
            {
              #search: search,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.ListAlbum>>);
  @override
  _i5.Future<_i3.ListResponse<_i3.Slide>> getSlides({
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSlides,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.Slide>>.value(
            _FakeListResponse_2<_i3.Slide>(
          this,
          Invocation.method(
            #getSlides,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.Slide>>);
  @override
  _i5.Future<_i3.ListResponse<_i3.FrontpageArticle>> getFrontpageArticles({
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFrontpageArticles,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<_i3.ListResponse<_i3.FrontpageArticle>>.value(
            _FakeListResponse_2<_i3.FrontpageArticle>(
          this,
          Invocation.method(
            #getFrontpageArticles,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.FrontpageArticle>>);
  @override
  _i5.Future<_i3.Device> registerDevice({
    required String? token,
    required String? type,
    bool? active = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerDevice,
          [],
          {
            #token: token,
            #type: type,
            #active: active,
          },
        ),
        returnValue: _i5.Future<_i3.Device>.value(_FakeDevice_13(
          this,
          Invocation.method(
            #registerDevice,
            [],
            {
              #token: token,
              #type: type,
              #active: active,
            },
          ),
        )),
      ) as _i5.Future<_i3.Device>);
  @override
  _i5.Future<_i3.Device> getDevice({required int? pk}) => (super.noSuchMethod(
        Invocation.method(
          #getDevice,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.Device>.value(_FakeDevice_13(
          this,
          Invocation.method(
            #getDevice,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.Device>);
  @override
  _i5.Future<_i3.Device> disableDevice({required int? pk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableDevice,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.Device>.value(_FakeDevice_13(
          this,
          Invocation.method(
            #disableDevice,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.Device>);
  @override
  _i5.Future<_i3.Device> updateDeviceToken({
    required int? pk,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDeviceToken,
          [],
          {
            #pk: pk,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i3.Device>.value(_FakeDevice_13(
          this,
          Invocation.method(
            #updateDeviceToken,
            [],
            {
              #pk: pk,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i3.Device>);
  @override
  _i5.Future<_i3.Device> updateDeviceReceiveCategory({
    required int? pk,
    required List<String>? receiveCategory,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDeviceReceiveCategory,
          [],
          {
            #pk: pk,
            #receiveCategory: receiveCategory,
          },
        ),
        returnValue: _i5.Future<_i3.Device>.value(_FakeDevice_13(
          this,
          Invocation.method(
            #updateDeviceReceiveCategory,
            [],
            {
              #pk: pk,
              #receiveCategory: receiveCategory,
            },
          ),
        )),
      ) as _i5.Future<_i3.Device>);
  @override
  _i5.Future<_i3.ListResponse<_i3.PushNotificationCategory>> getCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue:
            _i5.Future<_i3.ListResponse<_i3.PushNotificationCategory>>.value(
                _FakeListResponse_2<_i3.PushNotificationCategory>(
          this,
          Invocation.method(
            #getCategories,
            [],
          ),
        )),
      ) as _i5.Future<_i3.ListResponse<_i3.PushNotificationCategory>>);
  @override
  _i5.Future<_i3.SalesOrder> claimSalesOrder({required String? pk}) =>
      (super.noSuchMethod(
        Invocation.method(
          #claimSalesOrder,
          [],
          {#pk: pk},
        ),
        returnValue: _i5.Future<_i3.SalesOrder>.value(_FakeSalesOrder_14(
          this,
          Invocation.method(
            #claimSalesOrder,
            [],
            {#pk: pk},
          ),
        )),
      ) as _i5.Future<_i3.SalesOrder>);
}

/// A class which mocks [PaymentUserCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentUserCubit extends _i1.Mock implements _i2.PaymentUserCubit {
  MockPaymentUserCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ApiRepository get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApiRepository_15(
          this,
          Invocation.getter(#api),
        ),
      ) as _i4.ApiRepository);
  @override
  _i2.DetailState<_i3.PaymentUser> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDetailState_16<_i3.PaymentUser>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DetailState<_i3.PaymentUser>);
  @override
  _i5.Stream<_i2.DetailState<_i3.PaymentUser>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i2.DetailState<_i3.PaymentUser>>.empty(),
      ) as _i5.Stream<_i2.DetailState<_i3.PaymentUser>>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void emit(_i2.DetailState<_i3.PaymentUser>? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i6.Change<_i2.DetailState<_i3.PaymentUser>>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
