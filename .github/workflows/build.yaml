---
name: Build
on:
  - pull_request
  - workflow_dispatch

jobs:
  build-ios:
    name: iOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 2.10.3
          channel: stable
          cache: true
          
      - name: Flutter version
        run: flutter --version

      - name: Pods cache
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.7.0

      - name: Decode secrets
        env:
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        run: |
          echo $APPLE_API_KEY | base64 --decode > $GITHUB_WORKSPACE/app-store.p8

      - name: Build app
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.PASSWORDS_REPO_DEPLOY_KEY }}
          THALIA_API_HOST: thalia.nu
          THALIA_OAUTH_APP_ID: ${{ secrets.THALIA_OAUTH_APP_ID }}
          THALIA_OAUTH_APP_SECRET: ${{ secrets.THALIA_OAUTH_APP_SECRET }}
        run: bundle exec fastlane ios deploy_adhoc

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ThaliApp.ipa
          path: ios/build

  build-android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout passwords repo
        uses: actions/checkout@v3
        with:
          repository: svthalia/ThaliApp-passwords
          path: thaliapp-passwords
          ssh-key: ${{ secrets.PASSWORDS_REPO_DEPLOY_KEY }}

      - name: Decode secrets
        env:
          GOOGLE_PLAY_CONFIG: ${{ secrets.GOOGLE_PLAY_CONFIG_JSON }}
          RELEASE_CONFIG_STORE_FILE: ${{ secrets.ANDROID_RELEASE_CONFIG_STORE_FILE }}
          RELEASE_CONFIG_STORE_PASS: ${{ secrets.ANDROID_RELEASE_CONFIG_STORE_PASS }}
          RELEASE_CONFIG_KEY_PASS: ${{ secrets.ANDROID_RELEASE_CONFIG_KEY_PASS }}
          RELEASE_CONFIG_KEY_ALIAS: ${{ secrets.ANDROID_RELEASE_CONFIG_KEY_ALIAS }}
        run: |
          echo $GOOGLE_PLAY_CONFIG > $GITHUB_WORKSPACE/google-play.json

          echo "storeFile=$RELEASE_CONFIG_STORE_FILE" > $GITHUB_WORKSPACE/android/key.properties
          echo "storePassword=$RELEASE_CONFIG_STORE_PASS" >> $GITHUB_WORKSPACE/android/key.properties
          echo "keyPassword=$RELEASE_CONFIG_KEY_PASS" >> $GITHUB_WORKSPACE/android/key.properties
          echo "keyAlias=$RELEASE_CONFIG_KEY_ALIAS" >> $GITHUB_WORKSPACE/android/key.properties

      - name: Setup JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 2.10.3
          channel: stable
          cache: true
          
      - name: Flutter version
        run: flutter --version

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.7.0

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build app
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          THALIA_API_HOST: thalia.nu
          THALIA_OAUTH_APP_ID: ${{ secrets.THALIA_OAUTH_APP_ID }}
          THALIA_OAUTH_APP_SECRET: ${{ secrets.THALIA_OAUTH_APP_SECRET }}
        run: bundle exec fastlane android deploy_adhoc

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
